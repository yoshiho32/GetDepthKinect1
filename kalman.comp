#version 430 core
#define MILLIMETER 0.001
#define DEPTH_SCALE (-65535.0 * MILLIMETER)
#define DEPTH_MAXIMUM (-10.0)

//コンピュートシェーダー上のカーネルサイズ
layout(local_size_x = 1, local_size_y = 1) in;

//現在のデプスデータ
layout (location = 0) uniform sampler2D depth;

//一つ前の計算結果出力用の位置を読み取り、前回のデータにする
layout (rgba32f, binding = 1) uniform restrict image2D depth_old;

//計算結果出力用
layout(rgba32f, binding = 2) uniform writeonly image2D tex_output;

//カルマンフィルタの処理用
//深度の範囲 取ってやる必要があるかも？現状は決め打ち
vec2 range = vec2(100, 7000);

//カルマンフィルターの係数
uniform float K;

void main(){
	//gl_GlobalInvocationIDでカーネル的に現在地が取れる
	ivec2 texcoord = ivec2(gl_GlobalInvocationID.xy);

	//以前の頂点位置
	vec4 pp = imageLoad(depth_old, texcoord);

	//現在の頂点位置
	vec4 pv = texture(depth,texcoord);

	//計算結果保存用
	vec4 po = vec4(1.0,1.0,1.0,1.0);

	//カルマンフィルタ処理
	if (pv.r > range.s && pv.r < range.t)
	{
		if (pp.z > 0.0)
			po = pp + (pv - pp) * K;
		else
			po = pv;
		}
	else
	{
		po = pp;
	}
	
	//po = vec4(1.0,1.0,1.0,1.0);

	//tex_outputのtexcoordの位置にpoを入れる
	imageStore(tex_output, texcoord, po);

}